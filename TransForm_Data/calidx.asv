% 将数据点分配到附近的聚类中心
% points vocab1 vocab2 都按列组织，eg. points中一列位一个特征，行数为特征维数，列数为样本数
function [id1, id2] = calidx(points, vocab1, vocab2)
    n_vocab = size(vocab1, 2);
    N = size(points, 2);
    
    psub1 = points(1:size(points,1) / 2, :);
    psub2 = points(size(points,1) / 2 + 1 : size(points, 1), :);
    
    vocab_norm1 = sum(vocab1.*vocab1, 1);   % get a row vector
    vocab_norm2 = sum(vocab2.*vocab2, 1);
    psub1_norm = repmat(sum(psub1 .^ 2, 1), [size(vocab1,2), 1]) + repmat(vocab_norm1', [1, N]);
    dis = -2.0 * vocab1' *
    for i = 1 : N
        point = psub1(:, i);
        point_norm = repmat(sum(point .^ 2), [1, size(vocab_norm1, 2)]) + vocab_norm1;
        dis = -2 * point' * vocab1 + point_norm;
        
    end
    
    
    
    id1 = 1;
    minDis = psub1 - repmat(vocab1(:,1), [1, size(psub1, 2)]);
    minDis = sqrt(sum(minDis.^2, 1));
    for i = 1 : N
        dis = repmat(psub1(:,i), [1, n_vocab]) - vocab1; 
        dis = sqrt(sum(dis.^2, 1));
        [~, id] = min(dis, [], 2);
    end
    
    for i = 1:n
        dis = norm(psub1 - vocab1(:, i));
        if(dis < mindis)
            mindis = dis;
            id1 = i;
        end
    end
    
    id2 = 1;
    mindis = norm(psub2 - vocab2(:,1));
    for i = 1:n_vocab
        dis = norm(psub2 - vocab2(:, i));
        if(dis < mindis)
            mindis = dis;
            id2 = i;
        end
    end
end